# Generated from E:/Homework/PPl/Project/V-Assistant/backend/app/utils/../gen/AssistantDSL.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,42,340,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,
        1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,
        1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,
        1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
        13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,
        16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
        18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,
        20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
        22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,
        26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,
        28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,
        30,1,30,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,3,32,260,8,32,1,33,1,33,1,33,1,33,1,33,1,33,3,33,268,
        8,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,3,34,283,8,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
        3,35,294,8,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,303,8,36,1,
        37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,
        38,1,38,1,38,1,38,1,39,4,39,323,8,39,11,39,12,39,324,1,40,1,40,5,
        40,329,8,40,10,40,12,40,332,9,40,1,41,4,41,335,8,41,11,41,12,41,
        336,1,41,1,41,0,0,42,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
        32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,1,
        0,25,2,0,87,87,119,119,2,0,72,72,104,104,2,0,65,65,97,97,2,0,84,
        84,116,116,2,0,73,73,105,105,2,0,83,83,115,115,2,0,89,89,121,121,
        2,0,79,79,111,111,2,0,85,85,117,117,2,0,82,82,114,114,2,0,78,78,
        110,110,2,0,77,77,109,109,2,0,69,69,101,101,2,0,76,76,108,108,2,
        0,67,67,99,99,2,0,68,68,100,100,2,0,86,86,118,118,2,0,75,75,107,
        107,2,0,80,80,112,112,2,0,70,70,102,102,2,0,71,71,103,103,1,0,48,
        57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,
        13,13,32,32,349,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
        0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
        0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
        0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
        0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
        0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
        0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,
        0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,
        0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,1,85,1,0,0,0,3,90,1,0,0,0,
        5,93,1,0,0,0,7,98,1,0,0,0,9,103,1,0,0,0,11,106,1,0,0,0,13,112,1,
        0,0,0,15,116,1,0,0,0,17,119,1,0,0,0,19,124,1,0,0,0,21,129,1,0,0,
        0,23,142,1,0,0,0,25,149,1,0,0,0,27,152,1,0,0,0,29,155,1,0,0,0,31,
        160,1,0,0,0,33,165,1,0,0,0,35,171,1,0,0,0,37,178,1,0,0,0,39,185,
        1,0,0,0,41,190,1,0,0,0,43,197,1,0,0,0,45,204,1,0,0,0,47,208,1,0,
        0,0,49,210,1,0,0,0,51,213,1,0,0,0,53,216,1,0,0,0,55,223,1,0,0,0,
        57,229,1,0,0,0,59,232,1,0,0,0,61,240,1,0,0,0,63,245,1,0,0,0,65,259,
        1,0,0,0,67,267,1,0,0,0,69,282,1,0,0,0,71,293,1,0,0,0,73,302,1,0,
        0,0,75,304,1,0,0,0,77,315,1,0,0,0,79,322,1,0,0,0,81,326,1,0,0,0,
        83,334,1,0,0,0,85,86,7,0,0,0,86,87,7,1,0,0,87,88,7,2,0,0,88,89,7,
        3,0,0,89,2,1,0,0,0,90,91,7,4,0,0,91,92,7,5,0,0,92,4,1,0,0,0,93,94,
        7,6,0,0,94,95,7,7,0,0,95,96,7,8,0,0,96,97,7,9,0,0,97,6,1,0,0,0,98,
        99,7,10,0,0,99,100,7,2,0,0,100,101,7,11,0,0,101,102,7,12,0,0,102,
        8,1,0,0,0,103,104,7,1,0,0,104,105,7,4,0,0,105,10,1,0,0,0,106,107,
        7,1,0,0,107,108,7,12,0,0,108,109,7,13,0,0,109,110,7,13,0,0,110,111,
        7,7,0,0,111,12,1,0,0,0,112,113,7,1,0,0,113,114,7,12,0,0,114,115,
        7,6,0,0,115,14,1,0,0,0,116,117,7,11,0,0,117,118,7,6,0,0,118,16,1,
        0,0,0,119,120,7,5,0,0,120,121,7,1,0,0,121,122,7,7,0,0,122,123,7,
        0,0,0,123,18,1,0,0,0,124,125,7,5,0,0,125,126,7,7,0,0,126,127,7,11,
        0,0,127,128,7,12,0,0,128,20,1,0,0,0,129,130,7,4,0,0,130,131,7,10,
        0,0,131,132,7,5,0,0,132,133,7,3,0,0,133,134,7,9,0,0,134,135,7,8,
        0,0,135,136,7,14,0,0,136,137,7,3,0,0,137,138,7,4,0,0,138,139,7,7,
        0,0,139,140,7,10,0,0,140,141,7,5,0,0,141,22,1,0,0,0,142,143,7,9,
        0,0,143,144,7,12,0,0,144,145,7,11,0,0,145,146,7,4,0,0,146,147,7,
        10,0,0,147,148,7,15,0,0,148,24,1,0,0,0,149,150,7,11,0,0,150,151,
        7,12,0,0,151,26,1,0,0,0,152,153,7,3,0,0,153,154,7,7,0,0,154,28,1,
        0,0,0,155,156,7,13,0,0,156,157,7,4,0,0,157,158,7,5,0,0,158,159,7,
        3,0,0,159,30,1,0,0,0,160,161,7,16,0,0,161,162,7,4,0,0,162,163,7,
        12,0,0,163,164,7,0,0,0,164,32,1,0,0,0,165,166,7,3,0,0,166,167,7,
        2,0,0,167,168,7,5,0,0,168,169,7,17,0,0,169,170,7,5,0,0,170,34,1,
        0,0,0,171,172,7,15,0,0,172,173,7,12,0,0,173,174,7,13,0,0,174,175,
        7,12,0,0,175,176,7,3,0,0,176,177,7,12,0,0,177,36,1,0,0,0,178,179,
        7,9,0,0,179,180,7,12,0,0,180,181,7,11,0,0,181,182,7,7,0,0,182,183,
        7,16,0,0,183,184,7,12,0,0,184,38,1,0,0,0,185,186,7,3,0,0,186,187,
        7,2,0,0,187,188,7,5,0,0,188,189,7,17,0,0,189,40,1,0,0,0,190,191,
        7,8,0,0,191,192,7,18,0,0,192,193,7,15,0,0,193,194,7,2,0,0,194,195,
        7,3,0,0,195,196,7,12,0,0,196,42,1,0,0,0,197,198,7,11,0,0,198,199,
        7,7,0,0,199,200,7,15,0,0,200,201,7,4,0,0,201,202,7,19,0,0,202,203,
        7,6,0,0,203,44,1,0,0,0,204,205,7,5,0,0,205,206,7,12,0,0,206,207,
        7,3,0,0,207,46,1,0,0,0,208,209,5,44,0,0,209,48,1,0,0,0,210,211,7,
        4,0,0,211,212,7,10,0,0,212,50,1,0,0,0,213,214,7,2,0,0,214,215,7,
        3,0,0,215,52,1,0,0,0,216,217,7,9,0,0,217,218,7,12,0,0,218,219,7,
        18,0,0,219,220,7,12,0,0,220,221,7,2,0,0,221,222,7,3,0,0,222,54,1,
        0,0,0,223,224,7,12,0,0,224,225,7,16,0,0,225,226,7,12,0,0,226,227,
        7,9,0,0,227,228,7,6,0,0,228,56,1,0,0,0,229,230,7,2,0,0,230,231,7,
        5,0,0,231,58,1,0,0,0,232,233,7,18,0,0,233,234,7,12,0,0,234,235,7,
        10,0,0,235,236,7,15,0,0,236,237,7,4,0,0,237,238,7,10,0,0,238,239,
        7,20,0,0,239,60,1,0,0,0,240,241,7,15,0,0,241,242,7,7,0,0,242,243,
        7,10,0,0,243,244,7,12,0,0,244,62,1,0,0,0,245,246,5,61,0,0,246,64,
        1,0,0,0,247,248,7,6,0,0,248,249,7,12,0,0,249,260,7,5,0,0,250,251,
        7,6,0,0,251,252,7,12,0,0,252,260,7,18,0,0,253,254,7,5,0,0,254,255,
        7,8,0,0,255,256,7,9,0,0,256,260,7,12,0,0,257,258,7,7,0,0,258,260,
        7,17,0,0,259,247,1,0,0,0,259,250,1,0,0,0,259,253,1,0,0,0,259,257,
        1,0,0,0,260,66,1,0,0,0,261,262,7,10,0,0,262,268,7,7,0,0,263,264,
        7,10,0,0,264,265,7,7,0,0,265,266,7,18,0,0,266,268,7,12,0,0,267,261,
        1,0,0,0,267,263,1,0,0,0,268,68,1,0,0,0,269,270,7,11,0,0,270,271,
        7,4,0,0,271,272,7,10,0,0,272,273,7,8,0,0,273,274,7,3,0,0,274,283,
        7,12,0,0,275,276,7,11,0,0,276,277,7,4,0,0,277,278,7,10,0,0,278,279,
        7,8,0,0,279,280,7,3,0,0,280,281,7,12,0,0,281,283,7,5,0,0,282,269,
        1,0,0,0,282,275,1,0,0,0,283,70,1,0,0,0,284,285,7,1,0,0,285,286,7,
        7,0,0,286,287,7,8,0,0,287,294,7,9,0,0,288,289,7,1,0,0,289,290,7,
        7,0,0,290,291,7,8,0,0,291,292,7,9,0,0,292,294,7,5,0,0,293,284,1,
        0,0,0,293,288,1,0,0,0,294,72,1,0,0,0,295,296,7,15,0,0,296,297,7,
        2,0,0,297,303,7,6,0,0,298,299,7,15,0,0,299,300,7,2,0,0,300,301,7,
        6,0,0,301,303,7,5,0,0,302,295,1,0,0,0,302,298,1,0,0,0,303,74,1,0,
        0,0,304,305,7,21,0,0,305,306,7,21,0,0,306,307,7,21,0,0,307,308,7,
        21,0,0,308,309,5,45,0,0,309,310,7,21,0,0,310,311,7,21,0,0,311,312,
        5,45,0,0,312,313,7,21,0,0,313,314,7,21,0,0,314,76,1,0,0,0,315,316,
        7,21,0,0,316,317,7,21,0,0,317,318,5,58,0,0,318,319,7,21,0,0,319,
        320,7,21,0,0,320,78,1,0,0,0,321,323,7,21,0,0,322,321,1,0,0,0,323,
        324,1,0,0,0,324,322,1,0,0,0,324,325,1,0,0,0,325,80,1,0,0,0,326,330,
        7,22,0,0,327,329,7,23,0,0,328,327,1,0,0,0,329,332,1,0,0,0,330,328,
        1,0,0,0,330,331,1,0,0,0,331,82,1,0,0,0,332,330,1,0,0,0,333,335,7,
        24,0,0,334,333,1,0,0,0,335,336,1,0,0,0,336,334,1,0,0,0,336,337,1,
        0,0,0,337,338,1,0,0,0,338,339,6,41,0,0,339,84,1,0,0,0,9,0,259,267,
        282,293,302,324,330,336,1,6,0,0
    ]

class AssistantDSLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    YES = 33
    NO = 34
    MINUTE = 35
    HOUR = 36
    DAY = 37
    DATE = 38
    TIME = 39
    INT = 40
    IDENTIFIER = 41
    WS = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'What'", "'is'", "'your'", "'name'", "'Hi'", "'Hello'", "'Hey'", 
            "'my'", "'Show'", "'some'", "'instructions'", "'Remind'", "'me'", 
            "'to'", "'List'", "'View'", "'tasks'", "'Delete'", "'Remove'", 
            "'task'", "'Update'", "'Modify'", "'set'", "','", "'in'", "'at'", 
            "'repeat'", "'every'", "'as'", "'pending'", "'done'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "YES", "NO", "MINUTE", "HOUR", "DAY", "DATE", "TIME", "INT", 
            "IDENTIFIER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "YES", "NO", "MINUTE", "HOUR", "DAY", "DATE", "TIME", 
                  "INT", "IDENTIFIER", "WS" ]

    grammarFileName = "AssistantDSL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


